name: Smart Build Tweaks (macOS + cache)

on:
  workflow_dispatch:
    inputs:
      enable_orion:
        description: 'Enable Orion (Swift tweak support)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. Checkout 代码
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true

      # 2. 使用缓存 Theos
      - name: Use cache
        id: cache
        uses: actions/cache@v4.2.1
        with:
          path: ${{ github.workspace }}/theos
          key: macos-theos-${{ hashFiles('**/*.zip') }}
          restore-keys: |
            macos-theos-

      # 3. 安装依赖 & Theos & SDK
      - name: Prepare Theos
        shell: bash
        env:
          ENABLE_ORION: ${{ github.event.inputs.enable_orion }}
        run: |
          brew analytics off
          brew install ldid make
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

          THEOS="${GITHUB_WORKSPACE}/theos"
          echo "THEOS=$THEOS" >> $GITHUB_ENV
          mkdir -p "$THEOS"

          # 下载 Theos
          if [ ! -d "$THEOS/.git" ]; then
            git clone https://github.com/roothide/theos $THEOS --recursive
          fi

          # 可选启用 Orion
          if [[ "$ENABLE_ORION" == "true" ]]; then
            cd "$THEOS"
            git fetch
            git checkout orion
            git submodule update --init
          fi

          # 下载 SDKs
          mkdir -p "$THEOS/sdks"
          if [ -z "$(ls -A $THEOS/sdks)" ]; then
            cd "$THEOS/sdks"
            wget --no-verbose https://github.com/theos/sdks/archive/master.zip
            TMP=$(mktemp -d)
            7z x master.zip -o$TMP
            mv $TMP/*-master/*.sdk .
            rm -rf master.zip $TMP
          fi

      # 4. 自动识别源码目录（.zip 或普通目录）
      - name: Detect source directories
        id: detect
        shell: bash
        run: |
          SRC_DIRS=()
          mkdir -p $GITHUB_WORKSPACE/packages

          # 处理压缩包
          for f in *.zip; do
            [ -f "$f" ] || continue
            TMP="$GITHUB_WORKSPACE/tmp-$(basename "$f" .zip)"
            mkdir -p "$TMP"
            7z x "$f" -o"$TMP"
            for d in "$TMP"/*; do
              if [ -f "$d/Makefile" ]; then
                SRC_DIRS+=("$d")
              fi
            done
          done

          # 当前目录扫描
          for d in */; do
            if [ -f "$d/Makefile" ] && [[ ! " ${SRC_DIRS[*]} " =~ " $d " ]]; then
              SRC_DIRS+=("$d")
            fi
          done

          echo "SRC_DIRS=${SRC_DIRS[*]}" >> $GITHUB_ENV
          echo "Detected source directories: ${SRC_DIRS[*]}"

      # 5. 构建源码并统一复制 .deb
      - name: Build Tweaks
        shell: bash
        run: |
          mkdir -p $GITHUB_WORKSPACE/packages
          for dir in $SRC_DIRS; do
            echo "Building $dir ..."
            cd "$dir"

            make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
            make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
            make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)

            # 拷贝 .deb 到统一目录（同时处理 packages/ 和源码根目录）
            cp -v packages/*.deb $GITHUB_WORKSPACE/packages/ 2>/dev/null || true
            cp -v *.deb $GITHUB_WORKSPACE/packages/ 2>/dev/null || true

            cd $GITHUB_WORKSPACE
          done

      # 6. 上传 .deb
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Tweaks-deb
          path: packages/*.deb
