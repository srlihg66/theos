name: Build WeChat & WCPulse (macOS + cache)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. Checkout 代码和子模块
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true

      # 2. 设置缓存 key
      - name: Check cache
        run: |
          echo upstream_heads=`git ls-remote https://github.com/roothide/theos | head -n 1 | cut -f 1`-`git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1` >> $GITHUB_ENV

      # 3. 使用缓存
      - name: Use cache
        id: cache
        uses: actions/cache@v4.2.1
        with:
          path: ${{ github.workspace }}/theos
          key: ${{ runner.os }}-${{ env.upstream_heads }}

      # 4. 安装依赖 & Theos
      - name: Prepare Theos
        uses: huami1314/theos-action@main

      # 5. 设置 GNU Make
      - name: Setup GNU Make
        run: |
          echo "$(brew --prefix)/opt/make/libexec/gnubin" >> $GITHUB_PATH

      # 6. 解压源码
      - name: Unzip source files
        run: |
          unzip -o WeChat.zip -d WeChat
          unzip -o "WCPulse源代码.zip" -d WCPulse

      # 7. 构建 WeChat tweak
      - name: Build WeChat tweak
        working-directory: ./WeChat/WeChat
        run: |
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)

      # 8. 构建 WCPulse tweak
      - name: Build WCPulse tweak
        working-directory: ./WCPulse/WCPulse
        run: |
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)

      # 9. 上传 .deb 包
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Tweaks-deb
          path: '**/*.deb'
