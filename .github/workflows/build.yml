name: Build WeChat & WCPulse (macOS + cache)

on:
  workflow_dispatch:
    inputs:
      enable_orion:
        description: 'Enable Orion (Swift tweak support)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1. Checkout 代码和子模块
      - uses: actions/checkout@v4.2.2
        with:
          submodules: true

      # 2. 使用缓存 Theos
      - name: Use cache
        id: cache
        uses: actions/cache@v4.2.1
        with:
          path: ${{ github.workspace }}/theos
          key: macos-theos-${{ hashFiles('**/WeChat.zip','**/WCPulse源代码.zip') }}
          restore-keys: |
            macos-theos-

      # 3. 安装依赖 & Theos & SDK
      - name: Prepare Theos
        shell: bash
        env:
          ENABLE_ORION: ${{ github.event.inputs.enable_orion }}
        run: |
          brew analytics off
          brew install ldid make
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

          THEOS="${GITHUB_WORKSPACE}/theos"
          echo "THEOS=$THEOS" >> $GITHUB_ENV
          mkdir -p "$THEOS"

          # 下载 Theos
          if [ ! -d "$THEOS/.git" ]; then
            git clone https://github.com/roothide/theos $THEOS --recursive
          fi

          # 可选启用 Orion
          if [[ "$ENABLE_ORION" == "true" ]]; then
            cd "$THEOS"
            git fetch
            git checkout orion
            git submodule update --init
          fi

          # 下载 SDKs
          mkdir -p "$THEOS/sdks"
          if [ -z "$(ls -A $THEOS/sdks)" ]; then
            cd "$THEOS/sdks"
            wget --no-verbose https://github.com/theos/sdks/archive/master.zip
            TMP=$(mktemp -d)
            7z x master.zip -o$TMP
            mv $TMP/*-master/*.sdk .
            rm -rf master.zip $TMP
          fi

      # 4. 解压源码
      - name: Unzip source files
        run: |
          unzip -o WeChat.zip -d WeChat
          unzip -o "WCPulse源代码.zip" -d WCPulse

      # 5. 构建 WeChat tweak
      - name: Build WeChat tweak
        working-directory: ./WeChat/WeChat
        run: |
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)

      # 6. 构建 WCPulse tweak
      - name: Build WCPulse tweak
        working-directory: ./WCPulse/WCPulse
        run: |
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)

      # 7. 上传 .deb 包
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Tweaks-deb
          path: '**/*.deb'
